@import "../../variables";
/*header_base*/
header .header nav-link {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}
header nav a {
  font-size: 15px;
  font-weight: 400;
  color: rgba(0,0,0,.85);
  fill: currentColor;
  -webkit-transition: opacity .2s ease;
  -o-transition: opacity .2s ease;
  transition: opacity .2s ease;
  display: inline-block;
  padding: 15px 0;
  text-decoration: none;
  outline: 0!important;
}

header nav .sub {
  display: block;
  opacity: 0;
  pointer-events: none;
  border-radius: 0 0 4px 4px;
  position: absolute;
  background: #fff;
  min-width: 220px;
  -ms-transform: translateY(-5px);
  -webkit-transform: translateY(-5px);
  -o-transform: translateY(-5px);
  transform: translateY(-5px);
  overflow: hidden;
  -webkit-box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
  box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
}
header nav .sub>li {
  color: #fff;
  padding: 0;
  -webkit-box-shadow: 0 1px 0 rgba(0,0,0,.05);
  box-shadow: 0 1px 0 rgba(0,0,0,.05);
}
header nav .sub a {
  display: block;
  padding: 28px 20px;
  line-height: 0;
  font-size: 15px;
}
header nav .sub {
  display: block;
  opacity: 0;
  pointer-events: none;
  border-radius: 0 0 4px 4px;
  position: absolute;
  background: #fff;
  min-width: 220px;
  -ms-transform: translateY(-5px);
  -webkit-transform: translateY(-5px);
  -o-transform: translateY(-5px);
  transform: translateY(-5px);
  overflow: hidden;
  -webkit-box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
  box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
}
header nav .sub {
  display: block;
  opacity: 0;
  pointer-events: none;
  border-radius: 0 0 4px 4px;
  position: absolute;
  background: #fff;
  min-width: 220px;
  -ms-transform: translateY(-5px);
  -webkit-transform: translateY(-5px);
  -o-transform: translateY(-5px);
  transform: translateY(-5px);
  overflow: hidden;
  -webkit-box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
  box-shadow: 0 1px 0 rgba(0,0,0,.05), 0 4px 6px rgba(0,0,0,.05), 0 15px 20px rgba(0,0,0,.05);
}
.with-sub:hover .sub {
  opacity: 1;
  pointer-events: all;
  -ms-transform: translateY(0);
  -webkit-transform: translateY(0);
  -o-transform: translateY(0);
  transform: translateY(0);
  -webkit-transition: all .2s ease,-webkit-transform .3s;
  transition: all .2s ease,-webkit-transform .3s;
  -o-transition: all .2s ease,-o-transform .3s;
  transition: transform .3s,all .2s ease;
  transition: transform .3s,all .2s ease,-webkit-transform .3s,-o-transform .3s;
}
.with-sub>a svg {
  margin-left: 6px;
  top: 6px;
}

/*header-menu-base*/
$hamburger-padding-x                       : 15px !default;
$hamburger-padding-y                       : 15px !default;
$hamburger-layer-width                     : 40px !default;
$hamburger-layer-height                    : 4px !default;
$hamburger-layer-spacing                   : 6px !default;
$hamburger-layer-color                     : #000 !default;
$hamburger-layer-border-radius             : 4px !default;
$hamburger-hover-opacity                   : 0.7 !default;
$hamburger-hover-transition-duration       : 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter    : opacity(50%) !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
  3dx,
  3dx-r,
  3dy,
  3dy-r,
  3dxy,
  3dxy-r,
  arrow,
  arrow-r,
  arrowalt,
  arrowalt-r,
  arrowturn,
  arrowturn-r,
  boring,
  collapse,
  collapse-r,
  elastic,
  elastic-r,
  emphatic,
  emphatic-r,
  minus,
  slider,
  slider-r,
  spin,
  spin-r,
  spring,
  spring-r,
  stand,
  stand-r,
  squeeze,
  vortex,
  vortex-r
) !default;

// Base Hamburger (We need this)
// ==================================================
// Hamburger
// ==================================================
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  outline: none;

  transition-property: opacity, filter;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }
  &:focus {
    outline: none;
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
  outline: none;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}
  .hamburger--collapse-r {
  .hamburger-inner {
    top: auto;
    bottom: 0;
    transition-duration: 0.13s;
    transition-delay: 0.13s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::after {
      top: ($hamburger-layer-spacing * 2 + $hamburger-layer-height * 2) * -1;
      transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                  opacity 0.1s linear;
    }

    &::before {
      transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                  transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: translate3d(0, ($hamburger-layer-spacing + $hamburger-layer-height) * -1, 0) rotate(45deg);
      transition-delay: 0.22s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

      &::after {
        top: 0;
        opacity: 0;
        transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                    opacity 0.1s 0.22s linear;
      }

      &::before {
        top: 0;
        transform: rotate(90deg);
        transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                    transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }
  }
}
button.hamburger {
  display: none;
}
#mobile-menu {
  display: none;
}
#mobile-menu.is-active {
  display: block;
}
#mobile-menu {
  position: absolute;
  width: 100%;
  top: 75px;
  left: 0;
  right: 0;
  background: #ffffff;
}
@media screen and (max-width: $screen-tablet) {
  nav a {
    font-size: 14px;
    padding: 10px 0;
  }
  // mobile nav
  button.hamburger {
    display: flex;
    margin-left: auto;
  }
  #desktop-menu {
    display: none;
  }
  nav .logo-link {
    width: 100%;
    text-align: center;
  }
}